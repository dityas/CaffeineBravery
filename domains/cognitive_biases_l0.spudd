(defvar HostType    (c nc hp))
(defvar AccessLevel (user root restricted))
(defvar ExfilDone   (yes no))
(defvar AttActive   (yes no))

-- Defender modeling the attacker
(defvar Defl1ModelsAttl0        (m0))
(defvar Defl1ModelsAttl0EC      (ec0))
(defvar PassiveDefl1ModelsAttl0         (m0))
(defvar PassiveDefl1ModelsAttl0EC       (ec0))

(defvar Attl2ModelsDefl1        (m0 m1))
(defvar Attl2ModelsDefl1EC      (ec0))

(defvar Defl3ModelsAttl2    (m0))
(defvar Defl3ModelsAttl2EC  (ec0))

(defvar AttackerFrame   (att))
(defvar DefFrame        (highCap lowCap))

-- Actions for both agents
(defvar DefActions (BLOCK_ACTION NOP))
(defvar AttActions (RECON PRIV_ESC EXFIL NOP EXIT))

-- Defender observations
(defvar HType (obs_c obs_nc obs_hp))

-- Attacker observations
(defvar ReconObs (protected_asset unprotected_asset none))
(defvar DefReaction (yes no))

-- L0 Attacker's guess of L1 defender's action distribution
(defdd distDefActions
    (DefActions
        (BLOCK_ACTION   (0.01))
        (NOP            (0.99))
    )
)

--------------------------------------------------------------------

(defdd privEscAtt
    (AccessLevel
        (user           (AccessLevel' root))
        (root           (AccessLevel' root))
        (restricted     (AccessLevel' restricted))
    )
)

(defdd blockActionAccessLevel
    (AccessLevel
        (user           (AccessLevel' restricted))
        (root           (AccessLevel' restricted))
        (restricted     (AccessLevel' restricted))
    )
)

(defdd privEscAccessLevel
    (DefActions
        (BLOCK_ACTION   (blockActionAccessLevel))
        (NOP            (privEscAtt))
    )
)

(defdd defaultAccessLevel
    (DefActions
        (BLOCK_ACTION   (blockActionAccessLevel))
        (NOP            (SAME AccessLevel))
    )
)


----------------------------------------------------------
-- Attacker's Exfil action

(defdd exfilExfilDone
    (AccessLevel
        (user   (SAME ExfilDone))
        (root
            (ExfilDone
                (yes    (ExfilDone' yes))
                (no
                    (ExfilDone'
                        (yes    (0.9))
                        (no     (0.1))
                    )
                )
            )
        )
        (restricted     (SAME ExfilDone))
    )
)

-- Attacker's RECON action
-- When defender does not block the attacker's actions
(defdd reconObsDefNop
    (HostType'
        (c      
            (ReconObs' 
                (protected_asset    (0.9))
                (unprotected_asset  (0.05))
                (none               (0.05))
            )
        )

        (nc     
            (ReconObs' 
                (protected_asset    (0.05))
                (unprotected_asset  (0.05))
                (none               (0.9))
            )
        )

        (hp     
            (ReconObs' 
                (protected_asset    (0.05))
                (unprotected_asset  (0.9))
                (none               (0.05))
            )
        )
    )
)

-- Combined observ function based on joint actions
(defdd reconObs
    (reconObsDefNop)
)

-- recon observation for other actions
(defdd reconObsDefault
    (ReconObs' UNIFORM)
)

(defdbn attackerReconDBN
    (HostType       (SAME HostType))
    (AccessLevel    (# (DefActions) (distDefActions * defaultAccessLevel)))
    (ExfilDone      (SAME ExfilDone))
    (AttActive      (SAME AttActive))
    (ReconObs       (reconObs))
)

(defdbn attackerExfilDBN
    (HostType       (SAME HostType))
    (AccessLevel    (# (DefActions) (distDefActions * defaultAccessLevel)))
    (ExfilDone      (# (DefActions) (distDefActions * exfilExfilDone)))
    (AttActive      (SAME AttActive))
    (ReconObs       (ReconObs' UNIFORM))
)

(defdbn attackerExitDBN
    (HostType       (SAME HostType))
    (AccessLevel    (# (DefActions) (distDefActions * defaultAccessLevel)))
    (ExfilDone      (SAME ExfilDone))
    (AttActive      (AttActive' no))
    (ReconObs       (ReconObs' UNIFORM))
)

(defdbn attackerNopDBN
    (HostType       (SAME HostType)
    (AccessLevel    (# (DefActions) (distDefActions * defaultAccessLevel)))
    (ExfilDone      (SAME ExfilDone))
    (AttActive      (SAME AttActive))
    (ReconObs       (ReconObs' UNIFORM))
)

(defdbn attackerPrivEscDBN
    (HostType       (SAME HostType)
    (AccessLevel    (# (DefActions) (distDefActions * privEscAccessLevel)))
    (ExfilDone      (SAME ExfilDone))
    (AttActive      (SAME AttActive))
    (ReconObs       (ReconObs' UNIFORM))
)
-- multi agent reward DD for level 0

(defdd attackerReward
    (AttActive
        (yes
            (HostType
                (c
                    (ExfilDone
                        (yes    (20.0))
                        (no     (0.0))
                    )
                )
                (nc     
                    (ExfilDone
                        (yes    (-20.0))
                        (no     (0.0))
                    )
                )
                (hp
                    (ExfilDone
                        (yes    (-20.0))
                        (no     (0.0))
                    )
                )
            )
        )

        (no
            -(1.0)
        )
    )
)

(defdd exitCost
    (HostType
        (c      (1.0))
        (nc     (0.0))
        (hp     (-1.0))
    )
)

(defdd nopCost
    (AttActive
        (yes    -(0.9))
        (no     (0.0))
    )
)

-- Attacker model
(defpomdp attl0
    (S
        (HostType AccessLevel ExfilDone AttActive)
    )

    (O
        (ReconObs)
    )

    (A  AttActions)

    (dynamics
        (RECON  (attackerReconDBN))
        (EXFIL  (attackerExfilDBN))
        (NOP    (attackerNopDBN))
        (EXIT   (attackerExitDBN))
        (PRIV_ESC   (attackerPrivEscDBN))
    )
    
    (R
        (RECON      (-1.0))
        (PRIV_ESC   (-1.0))
        (NOP        (nopCost))
        (EXFIL      (-1.0))
        (EXIT       (attackerReward - exitCost))
    )

    (discount 0.95)
)

-- Initial belief of the attacker
(defdd initAttl0
    (HostType UNIFORM)
    * (AccessLevel  user)
    * (ExfilDone    no)
    * (AttActive    yes)
)

