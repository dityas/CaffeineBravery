(defvar VulnType    (lure real lure_real))
(defvar VulnFound   (yes no))
(defvar AccessLevel (user root restricted))
(defvar AttActive   (yes no))

-- Defender modeling the attacker
(defvar Defl1ModelsAttl0        (m0))
(defvar Defl1ModelsAttl0EC      (ec0))
(defvar PassiveDefl1ModelsAttl0     (m0))
(defvar PassiveDefl1ModelsAttl0EC   (ec0))

(defvar Attl2ModelsDefl1        (m0 m1 m2 m3))
(defvar Attl2ModelsDefl1EC      (ec0))

(defvar Defl3ModelsAttl2    (m0))
(defvar Defl3ModelsAttl2EC  (ec0))

(defvar AttackerFrame   (att))
(defvar DefFrame        (highCap lowCap))

-- Actions for both agents
(defvar DefActions (BLOCK_ACTION NOP))
(defvar AttActions (RECON PRIV_ESC NOP EXIT))

-- Defender observations
(defvar LureInteraction (yes no))

-- Attacker observations
(defvar VulnFoundObs    (yes no))
(defvar DefReaction     (yes no))

-- L0 Attacker's guess of L1 defender's action distribution
(defdd distDefActions
    (DefActions
        (BLOCK_ACTION   (0.01))
        (NOP            (0.99))
    )
)

--------------------------------------------------------------------

(defdd privEscAtt
    (VulnFound
        (yes
            (AccessLevel
                (user           (AccessLevel' root))
                (root           (AccessLevel' root))
                (restricted     (AccessLevel' user))
            )
        )

        (no     (SAME AccessLevel))
    )
)

(defdd blockActionAccessLevel
    (AccessLevel
        (user           (AccessLevel' restricted))
        (root           (AccessLevel' restricted))
        (restricted     (AccessLevel' restricted))
    )
)

(defdd privEscAccessLevel
    (DefActions
        (BLOCK_ACTION   (blockActionAccessLevel))
        (NOP            (privEscAtt))
    )
)

(defdd defaultAccessLevel
    (DefActions
        (BLOCK_ACTION   (blockActionAccessLevel))
        (NOP            (SAME AccessLevel))
    )
)

----------------------------------------------------------
-- Attacker's RECON action
-- When defender does not block the attacker's actions

(defdd vulnFoundTransition
    (VulnFound
        (yes    (VulnFound' yes))
        (no     
            (VulnFound'
                (yes    (0.7))
                (no     (0.3))
            )
        )
    )
)


(defdd vulnFoundVulnFoundObs
    (VulnFound'
        (yes
            (VulnFoundObs'
                (yes    (0.9))
                (no     (0.1))
            )
        )

        (no
            (VulnFoundObs'
                (yes    (0.1))
                (no     (0.9))
            )
        )
    )
)

-- recon observation for other actions
(defdd vulnFoundObsDefault
    (VulnFoundObs' UNIFORM)
)

(defdbn attackerReconDBN
    (VulnType       (SAME VulnType))
    (VulnFound      (vulnFoundTransition))
    (AccessLevel    (# (DefActions) (distDefActions * defaultAccessLevel)))
    (AttActive      (SAME AttActive))
    (VulnFoundObs   (vulnFoundVulnFoundObs))
)

(defdbn attackerExitDBN
    (VulnType       (SAME VulnType))
    (VulnFound      (SAME VulnFound))
    (AccessLevel    (# (DefActions) (distDefActions * defaultAccessLevel)))
    (AttActive      (AttActive' no))
    (VulnFoundObs   (vulnFoundObsDefault))
)

(defdbn attackerNopDBN
    (VulnType       (SAME VulnType))
    (VulnFound      (SAME VulnFound))
    (AccessLevel    (# (DefActions) (distDefActions * defaultAccessLevel)))
    (AttActive      (SAME AttActive))
    (VulnFoundObs   (vulnFoundObsDefault))
)

(defdbn attackerPrivEscDBN
    (VulnType       (SAME VulnType))
    (VulnFound      (SAME VulnFound))
    (AccessLevel    (# (DefActions) (distDefActions * privEscAccessLevel)))
    (AttActive      (SAME AttActive))
    (VulnFoundObs   (vulnFoundObsDefault))
)

-- multi agent reward DD for level 0

(defdd attackerReward
    (AttActive
        (yes
            (AccessLevel
                (user       -(1.0))
                (root       (20.0))
                (restricted -(1.0))
            )
        )

        (no
            -(1.0)
        )
    )
)

(defdd nopCost
    (AttActive
        (yes    -(0.9))
        (no     (0.0))
    )
)

-- Attacker model
(defpomdp attl0
    (S
        (VulnType VulnFound AccessLevel AttActive)
    )

    (O
        (VulnFoundObs)
    )

    (A  AttActions)

    (dynamics
        (RECON      (attackerReconDBN))
        (NOP        (attackerNopDBN))
        (EXIT       (attackerExitDBN))
        (PRIV_ESC   (attackerPrivEscDBN))
    )
    
    (R
        (RECON      (-1.0))
        (PRIV_ESC   (-1.0))
        (NOP        (nopCost))
        (EXIT       (attackerReward))
    )

    (discount 0.95)
)

-- Initial belief of the attacker
(defdd initAttl0
    (VulnType   lure_real)
    * (VulnFound    no)
    * (AccessLevel  user)
    * (AttActive    yes)
)

---------------------------------------------------------------
-- Defender l1 models

(initmodelvar Defl1ModelsAttl0
    (frames AttackerFrame)
    (
        (att    (m0     (initAttl0)))
    )
)

-- Defender's DDs
(defdd lureInteractionObs
    (AttActions
        (RECON      (LureInteraction' UNIFORM))
        (NOP        (LureInteraction' UNIFORM))
        (EXIT       (LureInteraction' UNIFORM))
        (PRIV_ESC   
            (VulnType'
                (lure
                    (LureInteraction'
                        (yes    (0.9))
                        (no     (0.1))
                    )
                )

                (real       (LureInteraction' UNIFORM))
                (lure_real  (LureInteraction' UNIFORM))
            )
        )
    )
)

(defdd attActVulnType
    (AttActions
        (RECON      (SAME VulnType))
        (NOP        (SAME VulnType))
        (EXIT       (SAME VulnType))
        (PRIV_ESC   (SAME VulnType))
    )
)

(defdd attActAccessLevel
    (AttActions
        (RECON      (SAME AccessLevel))
        (NOP        (SAME AccessLevel))
        (EXIT       (SAME AccessLevel))
        (PRIV_ESC   (privEscAtt))
    )
)

(defdd attActAttActive
    (AttActions
        (RECON      (SAME AttActive))
        (NOP        (SAME AttActive))
        (EXIT       (AttActive' no))
        (PRIV_ESC   (SAME AttActive))
    )
)

(defdd jointActionAccessLevel
    (AttActions
        (RECON      (blockActionAccessLevel))
        (NOP        (blockActionAccessLevel))
        (EXIT       (blockActionAccessLevel))
        (PRIV_ESC   (privEscAtt))
    )
)

(defdd jointActionVulnFound
    (AttActions
        (RECON      (vulnFoundTransition))
        (NOP        (SAME VulnFound))
        (EXIT       (SAME VulnFound))
        (PRIV_ESC   (SAME VulnFound))
    )
)

(defdbn actionBlockAction
    (VulnType       (attActVulnType))
    (VulnFound      (jointActionVulnFound))
    (AccessLevel    (jointActionAccessLevel))
    (AttActive      (attActAttActive))

    (LureInteraction    (lureInteractionObs))
)

(defdbn actionNOP
    (VulnType       (attActVulnType))
    (VulnFound      (jointActionVulnFound))
    (AccessLevel    (attActAccessLevel))
    (AttActive      (attActAttActive))

    (LureInteraction    (lureInteractionObs))
)

(defdd defReward
    (AccessLevel
        (user           (0.0))
        (root           -(1.0))
        (restricted     (10.0))
    )
)

---- defender L1 model
(defipomdp defl1
    (S
        (VulnType VulnFound AccessLevel AttActive)
    )

    (O
        (LureInteraction)
    )

    (A  DefActions)
    (Aj AttActions)

    (Mj Defl1ModelsAttl0)
    (EC Defl1ModelsAttl0EC)

    (Thetaj AttackerFrame
        (att    attl0)
    )

    (dynamics
        (BLOCK_ACTION   (actionBlockAction))
        (NOP            (actionNOP))
    )
    
    (R
        (BLOCK_ACTION   (defReward - (1.0)))
        (NOP            (defReward - (0.5)))
    )

    (discount 0.9)
    (H 7)
)

(defdd initDefl1Actual
    (VulnType       real)
    * (VulnFound    no)
    * (AccessLevel  user)
    * (AttActive    yes)
    * (Defl1ModelsAttl0 m0)
)

---- Initial beliefs of l1 defender

(defdd initDefl1c
    (VulnType       real)
    * (VulnFound    no)
    * (AttActive yes)
    * (AccessLevel user)
    * (Defl1ModelsAttl0 m0)
)

(defdd initDefl1hp
    (VulnType       lure)
    * (VulnFound    no)
    * (AttActive yes)
    * (AccessLevel user)
    * (Defl1ModelsAttl0 m0)
)

--(defdd initDefl1Final
--    (HostType 
--        (c      (0.5))
--        (hp     (0.5))
--        (c_hp   (0.0))
--    )
--    * (AccessLevel user)
--    * (ExfilDone no)
--    * (AttActive yes)
--    * (Defl1ModelsAttl0 m0)
--)

---- Make passive defender model

(initmodelvar PassiveDefl1ModelsAttl0
    (frames AttackerFrame)
    (
        (att    (m0     (initAttl0)))
    )
)

-- passive defender l1 model
(defipomdp defl1Passive
    (S
        (VulnType VulnFound AccessLevel AttActive)
    )

    (O
        (LureInteraction)
    )

    (A  DefActions)
    (Aj AttActions)

    (Mj PassiveDefl1ModelsAttl0)
    (EC PassiveDefl1ModelsAttl0EC)

    (Thetaj AttackerFrame
        (att    attl0)
    )

    (dynamics
        (BLOCK_ACTION   (actionBlockAction))
        (NOP            (actionNOP))
    )
    
    (R
        (BLOCK_ACTION   -(1.0))
        (NOP            (0.0))
    )

    (discount 0.9)
    (H 6)
)

(defdd initPassiveDefl1c
    (VulnType       real)
    * (VulnFound    no)
    * (AccessLevel user)
    * (AttActive yes)
    * (PassiveDefl1ModelsAttl0 m0)
)

(defdd initPassiveDefl1hp
    (VulnType       lure)
    * (VulnFound    no)
    * (AccessLevel user)
    * (AttActive yes)
    * (PassiveDefl1ModelsAttl0 m0)
)
--
--(defdd initPassiveDefl1Final
--    (HostType 
--        (c      (0.5))
--        (hp     (0.5))
--        (c_hp   (0.0))
--    )
--    * (AccessLevel user)
--    * (ExfilDone no)
--    * (AttActive yes)
--    * (PassiveDefl1ModelsAttl0 m0)
--)
--
---- Attacker l2

(defdd defReactionDefault
    (DefActions
        (BLOCK_ACTION
            (DefReaction' yes)
        )

        (NOP
            (DefReaction' no)
        )
    )
)

(defdbn attackerReconlNDBN
    (VulnType       (SAME VulnType))
    (VulnFound      (vulnFoundTransition))
    (AccessLevel    (defaultAccessLevel))
    (AttActive      (SAME AttActive))
    (VulnFoundObs   (vulnFoundVulnFoundObs))
    (DefReaction    (defReactionDefault))
)

(defdbn attackerExitlNDBN
    (VulnType       (SAME VulnType))
    (VulnFound      (SAME VulnFound))
    (AccessLevel    (defaultAccessLevel))
    (AttActive      (AttActive' no))
    (VulnFoundObs   (vulnFoundObsDefault))
    (DefReaction    (defReactionDefault))
)

(defdbn attackerNoplNDBN
    (VulnType       (SAME VulnType))
    (VulnFound      (SAME VulnFound))
    (AccessLevel    (defaultAccessLevel))
    (AttActive      (SAME AttActive))
    (VulnFoundObs   (vulnFoundObsDefault))
    (DefReaction    (defReactionDefault))
)

(defdbn attackerPrivEsclNDBN
    (VulnType       (SAME VulnType))
    (VulnFound      (SAME VulnFound))
    (AccessLevel    (privEscAccessLevel))
    (AttActive      (SAME AttActive))
    (VulnFoundObs   (vulnFoundObsDefault))
    (DefReaction    (defReactionDefault))
)

(initmodelvar Attl2ModelsDefl1
    (frames DefFrame)
    (
        (lowCap     (m0 (initPassiveDefl1c)))
        (lowCap     (m1 (initPassiveDefl1hp)))
        (highCap    (m2 (initDefl1c)))
        (highCap    (m3 (initDefl1hp)))
    )
)

-- Level 2 Attacker model
(defipomdp attl2
    (S
        (VulnType VulnFound AccessLevel AttActive)
    )

    (O
        (VulnFoundObs DefReaction)
    )

    (A  AttActions)
    (Aj DefActions)

    (Mj Attl2ModelsDefl1)
    (EC Attl2ModelsDefl1EC)

    (Thetaj DefFrame
        (lowCap    defl1Passive)
        (highCap   defl1)
    )

    (dynamics
        (RECON      (attackerReconlNDBN))
        (NOP        (attackerNoplNDBN))
        (EXIT       (attackerExitlNDBN))
        (PRIV_ESC   (attackerPrivEsclNDBN))
    )

    (R
        (RECON      (-1.0))
        (PRIV_ESC   (-1.0))
        (NOP        (-0.5))
        (EXFIL      (-1.0))
        (EXIT       (attackerReward - 1.0))
    )

    (discount 0.9)
    (H 7)
)

(defdd dependentMj
    (VulnType
        (real
            (Attl2ModelsDefl1
                (m0     (0.5))
                (m1     (0.0))
                (m2     (0.5))
                (m3     (0.0))
            )      
        )

        (lure
            (Attl2ModelsDefl1
                (m0     (0.0))
                (m1     (0.5))
                (m2     (0.0))
                (m3     (0.5))
            )
        )

        (lure_real
            (Attl2ModelsDefl1
                (m0     (0.25))
                (m1     (0.25))
                (m2     (0.25))
                (m3     (0.25))
        )
    )
)

(defdd initAttl2
    (VulnType
        (real       (0.1))
        (lure       (0.9))
        (lure_real  (0.0))
    )
    * (VulnFound    no)
    * (AccessLevel  user)
    * (AttActive    yes)
    * (dependentMj)
)


